# .gqlgen.yml example
#
# Refer to https://gqlgen.com/config/
# for detailed .gqlgen.yml documentation.

# Let gqlgen know where to put the generated server
exec:
  filename: internal/build/gqlgen/generated.go

# Let gqlgen know where to put the generated models (if any)
# All of our models will be generated by Prisma, this may contain input types.
model:
  filename: internal/build/gqlgen/models.go

# Tell gqlgen about any existing models you want to reuse for
# graphql. These normally come from the db or a remote api.
models:
  Post:
    model: bitbucket.org/delantai/gqlgen-prisma-boilerplate/internal/build/prisma.Post
  User:
    model: bitbucket.org/delantai/gqlgen-prisma-boilerplate/internal/build/prisma.User

# Optional, turns on resolver stub generation;
# copy and paste stubs from tmp file into: internal/resolvers/
resolver:
  filename: internal/build/gqlgen/.resolver_stubs.go
  type: Resolver

schema:
  - gqlgen/*.graphql
